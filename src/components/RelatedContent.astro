---
import { getLangFromUrl, useTranslatedPath } from '@/i18n/utils';
import { checkThumbnails } from '../lib/ownThumbnail';
import { formatPostDate } from '@/lib/date';
import BlurHashImage from './BlurHashImage.astro';

export interface Props {
  relatedPosts: any[];
  title: string;
  postId: string;
  className?: string;
  type: 'artist' | 'venue';
}

const { relatedPosts, title, postId, className = '', type } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);
const filteredPosts = relatedPosts
  .filter((p) => p.id !== postId)
  .map(checkThumbnails)
  .slice(0, 4);
---

<section class:list={['container', className]}>
  <h2 class="text-2xl font-bold mb-4">{title}</h2>
  <div
    class="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5"
  >
    {
      filteredPosts.map((post) => (
        <a href={`${translatePath('/album')}/${post.slug}`} class="group">
          <article
            class="relative overflow-hidden"
            style={{
              boxShadow: '0 30px 60px -10px rgba(0, 0, 0, 0.2)',
            }}
          >
            <BlurHashImage
              blurhash={post.thumbnail.blurhash}
              src={`https://images.wannabes.be/S=W1500,H1500,PD1/${post.thumbnail.hires}`}
              alt={`${post.artist.name} at ${post.venue.name}`}
              width={post.thumbnail.dimensions.width}
              height={post.thumbnail.dimensions.height}
              loading="lazy"
              class="aspect-[4/3] object-cover w-full transition-transform duration-300 group-hover:scale-105 md:transform md:scale-100"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-100">
              <div class="absolute bottom-0 left-0 right-0 p-4 text-white flex flex-row items-center justify-between">
                <h2 class="font-bold text-lg uppercase">
                  {type === 'artist' ? post.venue.name : post.artist.name}
                </h2>
                <p class="text-sm opacity-75">{formatPostDate(post.date)}</p>
              </div>
            </div>
          </article>
        </a>
      ))
    }
  </div>
</section>
