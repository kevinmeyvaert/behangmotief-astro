---
import Layout from '../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import BlurHashImage from './BlurHashImage.astro';
import Header from './Header.astro';
import { getPhotoSets } from '@/lib/photo-sets';
import GridLightbox from './GridLightbox.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const photoSets = await getPhotoSets();
console.log(photoSets[0].photos[0]);
---

<Layout title={t('grid.title')} description={t('grid.description')}>
  <Header />
  <section class="container mx-auto px-4 py-32">
    <div class="max-w-2xl mx-auto text-center">
      <h2 class="text-3xl font-bold mb-6 border-b-2 border-black inline-block">
        {t('grid.introTitle')}
      </h2>
      <p class="text-gray-600 mb-8">
        {t('grid.introDescription')}
      </p>
      <a
        href={`/${lang}`}
        class="inline-block bg-black text-white px-6 py-3 text-md font-semibold hover:bg-gray-800 transition-colors rounded-lg"
      >
        {t('grid.introCta')}
      </a>
    </div>
  </section>
  <div
    class="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 xl:grid-cols-10 gap-0"
  >
    {
      photoSets.map((photoSet) =>
        photoSet.photos.map((photo) => (
          <div
            class="cursor-pointer"
            data-grid-image-trigger
            data-image-id={photo.documentId}
            data-full-image={photo.formats.large.url}
            data-blurhash={photo.blurhash}
            data-width={photo.width}
            data-height={photo.height}
          >
            <BlurHashImage
              src={photo.formats.small.url}
              alt={photoSet.title}
              width={800}
              height={1000}
              blurhash={photo.blurhash}
              class="aspect-[4/5] object-cover w-full"
              loading="lazy"
            />
          </div>
        ))
      )
    }
  </div>
  <GridLightbox alt={t('grid.title')} />
</Layout>
