---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { ui } from '../i18n/ui';

interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  lang?: keyof typeof ui;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

const prevPage = currentPage > 1 ? currentPage - 1 : null;
const nextPage = currentPage < totalPages ? currentPage + 1 : null;

// Function to generate page URL with existing query params
const getPageUrl = (page: number) => {
  const url = new URL(baseUrl, Astro.url);
  const searchParams = new URLSearchParams(Astro.url.searchParams);
  searchParams.set('page', page.toString());
  url.search = searchParams.toString();
  return url.pathname + url.search;
};

// Function to get visible page numbers
const getVisiblePages = () => {
  const delta = 2; // Number of pages to show before and after current page
  const range = [];
  const rangeWithDots = [];
  let l;

  range.push(1);

  for (let i = currentPage - delta; i <= currentPage + delta; i++) {
    if (i < totalPages && i > 1) {
      range.push(i);
    }
  }

  range.push(totalPages);

  for (let i of range) {
    if (l) {
      if (i - l === 2) {
        rangeWithDots.push(l + 1);
      } else if (i - l !== 1) {
        rangeWithDots.push('...');
      }
    }
    rangeWithDots.push(i);
    l = i;
  }

  return rangeWithDots;
};

const visiblePages = getVisiblePages();

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<nav
  class="flex items-center justify-center space-x-2 mt-8"
  aria-label={t('pagination.aria.navigation')}
>
  <div class="flex items-center space-x-2">
    {
      prevPage && (
        <a
          href={getPageUrl(prevPage)}
          class="px-3 py-2 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors"
          aria-label={t('pagination.aria.previous')}
        >
          ←{t('pagination.previous')}
        </a>
      )
    }

    <div class="hidden sm:flex items-center space-x-1">
      {
        visiblePages.map((page) =>
          typeof page === 'number' ? (
            <a
              href={getPageUrl(page)}
              class:list={[
                'px-3 py-2 rounded-lg transition-colors',
                page === currentPage
                  ? 'bg-black text-white'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200',
              ]}
              aria-current={page === currentPage ? 'page' : undefined}
              aria-label={
                page === currentPage ? t('pagination.aria.current') : undefined
              }
            >
              {page}
            </a>
          ) : (
            <span class="px-2 text-gray-500">{page}</span>
          )
        )
      }
    </div>

    {
      nextPage && (
        <a
          href={getPageUrl(nextPage)}
          class="px-3 py-2 rounded-lg bg-gray-100 text-gray-700 hover:bg-gray-200 transition-colors"
          aria-label={t('pagination.aria.next')}
        >
          {t('pagination.next')}→
        </a>
      )
    }
  </div>
</nav>
