---
import Layout from '../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../../i18n/utils';
import { routes } from '../../i18n/ui';
import { POSTS } from '../../lib/queries';
import { graphqlClient } from '../../lib/graphql-client';
import PostGrid from '../../components/PostGrid.astro';
import Pagination from '../../components/Pagination.astro';
import Header from '@/components/Header.astro';

export async function getStaticPaths() {
  return Object.entries(routes).map(([locale, r]) => ({
    params: { locale, archive: r.archive },
  }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get search param if it exists
const searchParam = Astro.url.searchParams.get('search') || '';
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');
const POSTS_PER_PAGE = 15;

// Fetch posts with pagination
const { posts } = await graphqlClient.request(POSTS, {
  start: (currentPage - 1) * POSTS_PER_PAGE,
  limit: POSTS_PER_PAGE,
  all: searchParam || undefined,
});

console.log(posts);

const totalPages = Math.ceil(posts.pagination.total / POSTS_PER_PAGE);
---

<Layout title={t('archive.title')} description={t('archive.description')}>
  <Header />
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6">{t('archive.title')}</h1>
    <p class="text-gray-600 mb-8">{t('archive.description')}</p>

    {searchParam && <p class="mb-4">Showing results for: {searchParam}</p>}

    <PostGrid posts={posts.data} />

    <div class="my-12">
      <Pagination
        currentPage={currentPage}
        totalPages={totalPages}
        baseUrl={`/${lang}/${routes[lang].archive}`}
      />
    </div>
  </main>
</Layout>
