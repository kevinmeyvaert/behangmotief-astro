---
import Layout from '../../layouts/Layout.astro';
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from '../../i18n/utils';
import { albumsService } from '@/services/albums.service';
import PostGrid from '../../components/PostGrid.astro';
import Pagination from '../../components/Pagination.astro';
import Header from '@/components/Header.astro';
import SearchField from '@/components/SearchField.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Get search param if it exists
const searchParam = Astro.url.searchParams.get('search') || '';
const currentPage = parseInt(Astro.url.searchParams.get('page') || '1');
const POSTS_PER_PAGE = 15;

// Fetch posts with pagination using the service
const { albums, pagination } = await albumsService.searchAlbums({
  start: (currentPage - 1) * POSTS_PER_PAGE,
  limit: POSTS_PER_PAGE,
  searchTerm: searchParam || undefined,
});

const totalPages = Math.ceil(pagination.total / POSTS_PER_PAGE);
---

<Layout title={t('archive.title')} description={t('archive.description')}>
  <Header />
  <main class="container mx-auto px-4 md:px-0 py-8">
    <SearchField
      currentSearch={searchParam}
      archiveRoute={translatePath('/archive')}
    />

    {searchParam && albums.length === 0 ? (
      <div class="text-center py-16">
        <h2 class="text-2xl font-bold mb-4">{t('search.no.results.title')}</h2>
        <p class="text-gray-600 max-w-md mx-auto">
          {t('search.no.results.message').replace('{searchTerm}', searchParam)}
        </p>
      </div>
    ) : (
      <PostGrid posts={albums} loading="eager" />
    )}

    <div class="my-12">
      <Pagination
        currentPage={currentPage}
        totalPages={totalPages}
        baseUrl={translatePath('/archive')}
      />
    </div>
  </main>
</Layout>
